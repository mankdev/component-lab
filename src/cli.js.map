{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/cli.ts"],"names":[],"mappings":";;AACA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uBAA4B,UAAU,CAAC,CAAA;AACvC,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,IAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAGvC,IAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAE7C,IAAM,YAAY,GAAG,IAAI,OAAO,CAAC;IAC/B,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,SAAS,CAAC,UAAU;IAChC,UAAU,EAAE,sBAAsB;IAClC,WAAW,EAAE;QACX,sBAAsB,EAAE;YACtB,EAAE,EAAE;gBACF,IAAI,EAAE,GAAG;gBACT,MAAM,EAAE,IAAI;aACb;SACF;KACF;CACF,CAAC,CAAC;AAEH,IAAM,GAAG,GAAG,UAAC,OAAe,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC;AAEtD,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,UAAA,IAAI;IAC7B,GAAG,CAAC,+BAA6B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAG,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC;AAEH,YAAY,CAAC,EAAE,CAAC,aAAa,EAAE,UAAA,IAAI;IACjC,GAAG,CAAI,KAAK,CAAC,GAAG,CAAC,mCAAmC,CAAC,SAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAG,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC;AAGH,YAAY,CAAC,MAAM,CAAC;IAClB,GAAG,EAAE,IAAI,CAAC,GAAG;IACb,OAAO,EAAE,IAAI,CAAC,OAAO;IACrB,UAAU,EAAE,IAAI,CAAC,MAAM;IACvB,UAAU,EAAE,IAAI,CAAC,UAAU;CAC5B,EAAE,MAAM,CAAC,CAAC;AAEX,gBAAgB,GAAQ;IACtB,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE3B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACpC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC,CAAC;QAC3D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAEvC,oBAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["#!/usr/bin/env node\nimport * as chalk from 'chalk';\nimport { startServer } from './server';\nconst Liftoff = require('liftoff');\nconst minimist = require('minimist');\nconst interpret = require('interpret');\n\n\nconst args = minimist(process.argv.slice(2));\n\nconst ComponentLab = new Liftoff({\n  name: 'run-lab',\n  extensions: interpret.jsVariants,\n  configName: 'component-lab.config',\n  configFiles: {\n    'component-lab.config': {\n      up: {\n        path: '.',\n        findUp: true\n      }\n    }\n  }\n});\n\nconst log = (message: string) => console.log(message);\n\nComponentLab.on('require', name => {\n  log(`Requiring external module ${chalk.magenta(name)}`);\n});\n\nComponentLab.on('requireFail', name => {\n  log(`${chalk.red('Failed to require external module')} ${chalk.magenta(name)}`);\n});\n\n\nComponentLab.launch({\n  cwd: args.cwd,\n  require: args.require,\n  configPath: args.config,\n  completion: args.completion\n}, launch);\n\nfunction launch(env: any) {\n  const suite = args['_'][0];\n\n  if (!suite) {\n    log(chalk.red('No suite provided'));\n    process.exit(1);\n  }\n\n  if (!env.configPath) {\n    log(chalk.red('No local component-lab config file found'));\n    process.exit(1);\n  }\n\n  const config = require(env.configPath);\n\n  startServer(config, suite);\n}"]}