{"version":3,"file":"experiment-factory.js","sourceRoot":"","sources":["../../../../src/frontend/services/experiment-factory.ts"],"names":[],"mappings":";;;;;;;;;;;;OAAO,EAAE,UAAU,EAAkB,QAAQ,EAAmB,WAAW,EAAE,MAAM,EAA8B,MAAM,eAAe;AAGtI,OAAO,IAAM,YAAY,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,CAAC;AAQ5D;IAIE,kCAAkC,GAAgB,EAAE,QAAkB;QACpE,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,mDAAgB,GAAhB,UAAiB,EAAU,EAAE,QAAkB;QAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAM,OAAO,GAAG,GAAG,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAEhF,MAAM,CAAC,EAAE,gBAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7C,CAAC;IAhBH;QAAC,UAAU,EAAE;mBAKE,MAAM,CAAC,YAAY,CAAC;;gCALtB;IAiBb,+BAAC;AAAD,CAAC,AAhBD,IAgBC;AAED,mCAAmC,GAAgB;IACjD,MAAM,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;AAClD,CAAC","sourcesContent":["import { Injectable, NgModule, Type, Compiler, NgModuleFactory, OpaqueToken, Inject, Injector, ComponentFactory } from '@angular/core';\nimport { ResolvedLab } from '../models/lab';\n\nexport const RESOLVED_LAB = new OpaqueToken('Resolved Lab');\n\nexport interface CompiledExperiment {\n  injector: Injector;\n  factory: ComponentFactory<any>;\n}\n\n@Injectable()\nexport class ExperimentFactoryService {\n  private _lab: ResolvedLab;\n  private _factory: NgModuleFactory<any>;\n\n  constructor(@Inject(RESOLVED_LAB) lab: ResolvedLab, compiler: Compiler) {\n    this._lab = lab;\n    this._factory = compiler.compileModuleSync(lab.ngModule);\n  }\n\n  compileComponent(id: string, injector: Injector): CompiledExperiment {\n    const component = this._lab.components[id];\n    const ref = this._factory.create(injector);\n    const factory = ref.componentFactoryResolver.resolveComponentFactory(component);\n\n    return { factory, injector: ref.injector };\n  }\n}\n\nexport function provideResolvedLab(lab: ResolvedLab) {\n  return { provide: RESOLVED_LAB, useValue: lab };\n}"]}