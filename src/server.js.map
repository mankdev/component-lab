{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/server.ts"],"names":[],"mappings":";AAEA,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,IAAM,gBAAgB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACvD,IAAM,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC7D,IAAM,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACzD,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAG7B,qBAA4B,MAA0B,EAAE,KAAa;IACnE,IAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;IAC3C,IAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;IAEtC,aAAa,CAAC,KAAK,GAAG;QACpB,IAAI,EAAE;YACJ,uCAAoC,MAAM,CAAC,IAAI,SAAI,MAAM,CAAC,IAAI,OAAG;iBAC9D,QAAQ;YACX,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;UACrB;KACF,CAAC;IAEF,aAAa,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAE,CAAC,CAAC,YAAY,iBAAiB,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAE9F,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;IAExC,QAAQ,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC;QAChC,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,IAAI;KACb,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,KAAK,CAAC,IAAI,iBAAiB,CAAC;QACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC;KACnD,CAAC,CAAC,CAAC;IAEJ,IAAM,YAAY,GAAG;QACnB,kBAAkB,EAAE,IAAI;QACxB,KAAK,EAAE;YACL,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,KAAK;YACb,YAAY,EAAE,KAAK;SACpB;QACD,MAAM,EAAE,IAAI;KACb,CAAC;IAEF,IAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAE5D,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAG,MAAM,CAAC,IAAM,EAAE,UAAS,GAAG,EAAE,KAAK;YAC9D,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;oBAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAAC,CAAC;gBAChD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAlDe,mBAAW,cAkD1B,CAAA","sourcesContent":["import { ComponentLabConfig } from './config';\n\nconst webpack = require('webpack');\nconst WebpackDevServer = require('webpack-dev-server');\nconst ProgressPlugin = require('webpack/lib/ProgressPlugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst path = require('path');\n\n\nexport function startServer(config: ComponentLabConfig, suite: string) {\n  const webpackConfig = config.webpackConfig;\n  const includes = config.include || [];\n\n  webpackConfig.entry = {\n    main: [\n      `webpack-dev-server/client?http://${config.host}:${config.port}/`,\n      ...includes,\n      config.suites[suite]\n    ]\n  };\n\n  webpackConfig.plugins = webpackConfig.plugins.filter(p => ! (p instanceof HtmlWebpackPlugin));\n\n  const compiler = webpack(webpackConfig);\n  \n  compiler.apply(new ProgressPlugin({\n    profile: true,\n    colors: true\n  }));\n\n  compiler.apply(new HtmlWebpackPlugin({\n    template: path.resolve(__dirname, '../index.html')\n  }));\n\n  const serverConfig = {\n    historyApiFallback: true,\n    stats: {\n      assets: true,\n      colors: true,\n      version: true,\n      hash: true,\n      timings: true,\n      chunks: false,\n      chunkModules: false  \n    },\n    inline: true\n  };\n\n  const server = new WebpackDevServer(compiler, serverConfig);\n\n  return new Promise((resolve, reject) => {\n    server.listen(config.port, `${config.host}`, function(err, stats) {\n      if (err) {\n        console.error(err.stack || err);\n        if (err.details) { console.error(err.details); }\n        reject(err.details);\n      }\n    });\n  });\n}"]}